/* Script generated by Pawn Studio */

#include <amxmodx>
#include <amxmisc>
#include <reapi>
#include <fun>
#include <engine>
#include <print_center_fx>

new const g_iPlugin[ ][ ] = { "TELEPORTS", "0.1", "Hypnotize", "[ tag ]" };

new g_fOrigin[ 3 ][ 3 ];
new g_iTiempo[ 3 ];

new Float:g_fOrigin2[ 3 ][ 3 ];
new g_iNumero2[ 3 ];

new g_szPath[ 256 ];
new g_szMap[ 90 ]; 
new g_szRuta[ 300 ]; 

new g_iTouch = 0;
new g_iSaved = 0;
new bool:g_bTouch[ 3 ];

new const g_szEntidades[ ][ ] = { "tele_1", "tele_2", "tele_3" };

new bool:g_bCargado[ 3 ];

public plugin_init()
{
    register_plugin( g_iPlugin[ 0 ], g_iPlugin[ 1 ], g_iPlugin[ 2 ] );
    // Add your own code here
    
    register_event( "HLTV", "event_RoundStart", "a", "1=0", "2=0" );
    register_clcmd( "say /zone", "f_Menu21" );
    register_clcmd( "ze_fly", "ClientCommand_Fly" );
    register_clcmd( "REGISTRAR_TIEMPO", "reg_tiempo" );
    get_mapname( g_szMap, charsmax( g_szMap ) );
    get_configsdir( g_szPath, charsmax( g_szPath ) );
    formatex( g_szRuta, charsmax( g_szRuta ), "%s/%s.ini", g_szPath, g_szMap );
    
    arrayset( g_bCargado, 3, false );
    
    ReadPos( );
    
    register_touch( "trigger_multiple", "player", "funcion_touch" ); 
        
    for( new i = 0; i < 3; ++i )
        g_iTiempo[ i ] = g_iNumero2[ i ];
    
    g_iSaved = 0;
}

public ClientCommand_Fly( iId )
{
    if( get_user_flags( iId ) & ADMIN_RCON )
    {
        set_user_noclip( iId, get_user_noclip( iId ) ? 0 : 1 ); 
        set_user_godmode( iId, set_user_godmode( iId ) ? 0 : 1 );
    }
    
    return PLUGIN_HANDLED;
}
public funcion_touch( touched, toucher ) 
{
    new szClass[ 20 ], szTarget[ 20 ];
    get_entvar( touched, var_classname, szClass, charsmax( szClass ) );
    get_entvar( touched, var_targetname, szTarget, charsmax( szTarget ) );
    
    if (!touched || !is_entity(touched) || is_user_alive(touched) )
        return PLUGIN_HANDLED;
        
    if( ( get_member( toucher, m_iTeam ) == TEAM_CT && g_iTouch < 3 ) && g_bCargado[ g_iTouch < 3 ?  g_iTouch : 2 ] )
    {
        if( equal( g_szEntidades[ g_iTouch ], szTarget ) && !g_bTouch[ g_iTouch ] )
        {
            g_bTouch[ g_iTouch ] = true;
            
            set_task( 1.0, "fnConteo", 5678, _, _, "b" );
        }
    }
    return PLUGIN_CONTINUE;
}
public fnConteo( )
{    
    client_print(0, print_center, "..:::> Defend %i Seconds <:::..", g_iTiempo[ g_iTouch ] );
    --g_iTiempo[ g_iTouch ];
    
    if( g_iTiempo[ g_iTouch ] <= 0 )
    {
        fnTeleport( );
        remove_task( 5678 );
        return;
    }
}

public reg_tiempo( id )
{
    static szTiempo[ 20 ];
    read_args( szTiempo, charsmax( szTiempo ) );
    remove_quotes( szTiempo );
    
    g_iNumero2[ g_iSaved ] = str_to_num( szTiempo );
    
    SaveEnt( g_fOrigin[ g_iSaved ], g_iNumero2[ g_iSaved ] );
    
    ++g_iSaved;
}
public fnTeleport( )
{
    for( new id = 1; id <= MAX_PLAYERS; ++id )
    {
        if( !is_user_alive( id ) || !is_user_connected( id ) || get_member( id, m_iTeam ) != TEAM_TERRORIST )
            continue;
            
        set_entvar( id, var_origin, g_fOrigin2[ g_iTouch ])    
    }
    ++g_iTouch;
}

public event_RoundStart( )
{
    g_iTouch = 0;
    arrayset( g_bTouch, 3, false );
    
    g_bTouch[ 0 ] = false; g_bTouch[ 1 ] = false; g_bTouch[ 2 ] = false;
    
    for( new i = 0; i < 3; ++i )
        g_iTiempo[ i ] = g_iNumero2[ i ];
    
    remove_task( 5678 );
}

public f_Menu21( id )
{
    if( ~get_user_flags( id ) & ADMIN_RCON || g_iSaved > 2 )
        return PLUGIN_HANDLED;
    
    new menu = menu_create( "Registrar Touch","hn_poner" );
    
    menu_additem( menu,"Registrar Teleport" );
    menu_additem( menu,"Guardar Teleport" );
    
    menu_display( id, menu );
    return PLUGIN_HANDLED;
}
public hn_poner( id, menu, item )
{
    if ( item == MENU_EXIT || ~get_user_flags( id ) & ADMIN_RCON || g_iSaved > 2 )
    {
        menu_destroy( menu );
        return PLUGIN_HANDLED;
    }
    switch( item )
    {
        case 0:
        {
            //new iOrigin[ 3 ]; 
            get_user_origin( id, g_fOrigin[ g_iSaved ] , 0 );
            //IVecFVec( iOrigin, g_fOrigin );
        }
        case 1:
        {
            client_cmd( id, "messagemode REGISTRAR_TIEMPO" );
        }
    }
    f_Menu21( id );
    return PLUGIN_HANDLED;  
} 

SaveEnt( Origin[ 3 ], num )
{
    new iCoordenada[ 100 ]; 
    formatex( iCoordenada, charsmax( iCoordenada ),  "%d %d %d %d", Origin[ 0 ], Origin[ 1 ], Origin[ 2 ], num );
    new szText[ 300 ];
    
    if( !file_exists( g_szRuta ) ) 
    {
        log_amx("Archivo '%s' No existe, pero lo creamos.", g_szRuta );
        write_file( g_szRuta, "; Archivo creado automaticamente" );
        formatex( szText, charsmax(szText), "; El mapa es %s:", g_szMap ); write_file( g_szRuta, szText );
        write_file( g_szRuta, "; Plugin Made By Hypnotize" );
        write_file( g_szRuta, "; Las Coordenadas son:" );
        write_file( g_szRuta, "; --------------------------------" );
    }
    write_file( g_szRuta, iCoordenada );
}
public ReadPos( )
{
    if( !file_exists( g_szRuta ) ) 
    {
        log_amx("[ AMXX ] Archivo '%s' NO Existe.", g_szRuta );
        return;
    }
    new szDat[ 40 ], szDat2[ 40 ], szDat3[ 40 ], szDat4[ 40 ];
    new szLine[ 700 ], iContador = 0;
    
    new file; file = fopen( g_szRuta, "r" );
    while( file && !feof( file ) )
    {
        fgets( file, szLine, charsmax( szLine ) );
        
        if( szLine[ 0 ] == ';' || szLine[ 0 ] == '/' && szLine[ 1 ] == '/' || !szLine[ 0 ] )
            continue;
        
        parse( szLine, szDat, charsmax( szDat ), szDat2, charsmax( szDat2 ), szDat3, charsmax( szDat3 ), szDat4, charsmax( szDat4 ) );
        
        if( iContador < 3 )
        {
            g_fOrigin2[ iContador ][ 0 ] = str_to_float( szDat );
            g_fOrigin2[ iContador ][ 1 ] = str_to_float( szDat2 );
            g_fOrigin2[ iContador ][ 2 ] = str_to_float( szDat3 );
            
            g_iNumero2[ iContador ] = str_to_num( szDat4 );
            
            g_bCargado[ iContador ] = true;
        }
        ++iContador;
    }
    g_iSaved = iContador;
    fclose( file );
} 